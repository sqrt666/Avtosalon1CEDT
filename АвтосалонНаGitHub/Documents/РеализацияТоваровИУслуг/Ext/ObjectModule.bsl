
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//Если Не ЗначениеЗаполнено(Ответственный) Тогда
	//	Ответственный = ПараметрыСеанса.ТекущийПользователь;
	//КонецЕсли;
	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказНаряд") Тогда
		 Контрагент = ДанныеЗаполнения.Клиент;
		 Автомобиль = ДанныеЗаполнения.Автомобиль;
		 Сотрудник = ДанныеЗаполнения.Сотрудник;
		 ДокументОснование = ДанныеЗаполнения.Ссылка; 
		 СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		 Комментарий = Строка("Введен на основании: Заказ-наряд №" + ДанныеЗаполнения.Номер + " от " + ДанныеЗаполнения.Дата);
		 Для Каждого ТекСтрокаУслуги Из ДанныеЗаполнения.Услуги Цикл
			 НоваяСтрока = Услуги.Добавить();
			 НоваяСтрока.Сумма = ТекСтрокаУслуги.Сумма;
			 НоваяСтрока.Цена = ТекСтрокаУслуги.Цена;
			 НоваяСтрока.Количество = ТекСтрокаУслуги.Количество;
			 НоваяСтрока.Услуга = ТекСтрокаУслуги.Услуга;
		 КонецЦикла;
		 Для Каждого ТекСтрокаМатериалыЗаказчика Из ДанныеЗаполнения.МатериалыЗаказчика Цикл
			 НоваяСтрока = МатериалыЗаказчика.Добавить();
			 НоваяСтрока.Количество = ТекСтрокаМатериалыЗаказчика.Количество;
			 НоваяСтрока.Номенклатура = ТекСтрокаМатериалыЗаказчика.Номенклатура;
			 НоваяСтрока.СостояниеМатериала = ТекСтрокаМатериалыЗаказчика.СостояниеМатериала;
	     КонецЦикла;
	 КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.Продажи.Записывать = Истина;
	Движения.УчетЗатрат.Записывать = Истина;
	Движения.Хозрасчётный.Записывать = Истина;
	Если ЗначениеЗаполнено (ДокументОснование) И ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаказНаряд") Тогда
		Движения.ЗаказыКлиентов.Записывать = Истина;
    КонецЕсли;

	Движения.ТоварыНаСкладах.Записать();
	Движения.ЗаказыКлиентов.Записать();
	Движения.Продажи.Записать();
	Движения.УчетЗатрат.Записать(); 
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыНаСкладах");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.УстановитьЗначение("Склад", Склад);
	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РеализацияТоваровИУслугТовары.Номенклатура КАК Номенклатура,
	               |	РеализацияТоваровИУслугТовары.Ссылка.Склад КАК Склад,
	               |	СУММА(РеализацияТоваровИУслугТовары.Количество) КАК Количество,
	               |	СУММА(РеализацияТоваровИУслугТовары.Сумма) КАК Сумма
	               |ПОМЕСТИТЬ ВТ_Товары
	               |ИЗ
	               |	Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТоваровИУслугТовары
	               |ГДЕ
	               |	РеализацияТоваровИУслугТовары.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РеализацияТоваровИУслугТовары.Номенклатура,
	               |	РеализацияТоваровИУслугТовары.Ссылка.Склад
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	РеализацияТоваровИУслугУслуги.Услуга,
	               |	NULL,
	               |	СУММА(РеализацияТоваровИУслугУслуги.Количество),
	               |	СУММА(РеализацияТоваровИУслугУслуги.Сумма)
	               |ИЗ
	               |	Документ.РеализацияТоваровИУслуг.Услуги КАК РеализацияТоваровИУслугУслуги
	               |ГДЕ
	               |	РеализацияТоваровИУслугУслуги.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РеализацияТоваровИУслугУслуги.Услуга
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура,
	               |	Склад
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Товары.Номенклатура КАК Номенклатура,
	               |	ВЫБОР
	               |		КОГДА ВТ_Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК ЭтоТовар,
	               |	ВТ_Товары.Номенклатура.Представление КАК НоменклатураПредставление,
	               |	ВТ_Товары.Количество КАК КоличествоВДокументе,
	               |	ВТ_Товары.Сумма КАК СуммаВДокументе,
	               |	ВТ_Товары.Склад КАК Склад,
	               |	ТоварыНаСкладахОстатки.СрокГодности КАК СрокГодности,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	               |	ВТ_Товары.Номенклатура.СтатьяЗатрат КАК СтатьяЗатрат,
	               |	ВТ_Товары.Номенклатура.СчётБухгалтерскогоУчёта КАК СчётБухгалтерскогоУчёта
	               |ИЗ
	               |	ВТ_Товары КАК ВТ_Товары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |				&МоментВремени,
	               |				(Номенклатура, Склад) В
	               |					(ВЫБРАТЬ
	               |						ВТ_Товары.Номенклатура,
	               |						ВТ_Товары.Склад
	               |					ИЗ
	               |						ВТ_Товары КАК ВТ_Товары)) КАК ТоварыНаСкладахОстатки
	               |		ПО ВТ_Товары.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТоварыНаСкладахОстатки.СрокГодности
	               |ИТОГИ
	               |	МАКСИМУМ(КоличествоВДокументе),
	               |	МАКСИМУМ(СуммаВДокументе),
	               |	МАКСИМУМ(Склад),
	               |	СУММА(КоличествоОстаток)
	               |ПО
	               |	Номенклатура";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));
	
	ВыборкаНоменклатура = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
	Если ВыборкаНоменклатура.ЭтоТовар Тогда
			
	СуммаПоТоварам = 0;
	
	Превышение = ВыборкаНоменклатура.КоличествоВДокументе - ВыборкаНоменклатура.КоличествоОстаток;
	
	Если Превышение > 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон("Превышение остатка по номенклатуре ""%1""  в количестве ""%2""", ВыборкаНоменклатура.НоменклатураПредставление, Превышение);
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	Если Отказ Тогда
		Продолжить;
	КонецЕсли;
	
	ОсталосьСписать = ВыборкаНоменклатура.КоличествоВДокументе;
	
	ВыборкаДетальные = ВыборкаНоменклатура.Выбрать();
	
	Пока ВыборкаДетальные.Следующий() И ОсталосьСписать > 0 Цикл
		
		    Списываем = Мин (ВыборкаДетальные.КоличествоОстаток, ОсталосьСписать);
            Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
            Движение.Период = Дата;
            Движение.Номенклатура = ВыборкаДетальные.Номенклатура;
            Движение.Склад = Склад;
            Движение.СрокГодности = ВыборкаДетальные.СрокГодности;
			СуммаПоТоварам = ВыборкаНоменклатура.СуммаВДокументе;
			Движение.Количество = Списываем;
			
			Если Списываем = ВыборкаДетальные.КоличествоОстаток Тогда
			    СуммаСписания = ВыборкаДетальные.СуммаОстаток;
			Иначе
			    СуммаСписания = Списываем / ВыборкаДетальные.КоличествоОстаток * ВыборкаДетальные.СуммаОстаток;
			КонецЕсли;
			
			ОсталосьСписать = ОсталосьСписать - Списываем;
			
			Движение.Сумма = СуммаСписания;
			
			СуммаПоТоварам = СуммаПоТоварам + Движение.Сумма;
			
			Движение = Движения.Хозрасчётный.Добавить();
			Движение.СчетДт = ПланыСчетов.Хозрасчетный.Продажи;
			Движение.СчетКт = ВыборкаНоменклатура.СчётБухгалтерскогоУчёта;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчётные.Номенклатура] = ВыборкаДетальные.Номенклатура; 
			Движение.Период = Дата;
			Движение.Сумма = СуммаСписания;
			Движение.Содержание = "Списана себестоимость товарно-материальных ценностей";
			
		КонецЦикла;
		
		Движение = Движения.УчетЗатрат.Добавить(); 
        Движение.Период = Дата;
        Движение.СтатьяЗатрат = ВыборкаНоменклатура.СтатьяЗатрат;
        Движение.Сумма = СуммаПоТоварам;

	КонецЕсли;
	
	Движение = Движения.Продажи.Добавить(); 
    Движение.Период = Дата;
    Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
    Движение.Сотрудник = Сотрудник;
    Движение.Контрагент = Контрагент;
    Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;
	Движение.Количество = ВыборкаНоменклатура.КоличествоВДокументе;
	
КонецЦикла;

    Движение = Движения.Хозрасчётный.Добавить();
    Движение.СчетДт = ПланыСчетов.Хозрасчетный.РасчётыСПокупателями;
	Движение.СчетКт = ПланыСчетов.Хозрасчетный.Продажи;
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, Контрагент);
	Движение.Период = Дата;
	Движение.Сумма = СуммаДокумента;
	Движение.Содержание = "Отражена выручка от реализации товаров и услуг";

    Движения.МатериалыЗаказчиков.Записывать = Истина;
	Для Каждого ТекСтрокаМатериалыЗаказчика Из МатериалыЗаказчика Цикл
		Движение = Движения.МатериалыЗаказчиков.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаМатериалыЗаказчика.Номенклатура;
		Движение.Заказчик = Контрагент;
		Движение.Склад = Склад;
		Движение.Количество = ТекСтрокаМатериалыЗаказчика.Количество;
	КонецЦикла;

	Движение = Движения.ЗаказыКлиентов.Добавить();                
    Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
    Движение.Период = Дата;
    Движение.Клиент = Контрагент;
    Движение.ЗаказКлиента = ДокументОснование;        
    Движение.Сумма = Услуги.Итог("Сумма");

КонецПроцедуры


	
