
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваровИУслуг") Тогда
		ДанныеДокументаОснования = ПолучитьДанныеПоРеализацииТоваров(ДанныеЗаполнения);
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеДокументаОснования);
		ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРасходаДенег.ВозвратПокупателю");
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваровИУслуг") Тогда
		ДанныеДокументаОснования = ПолучитьДанныеПоПоступлениеТоваров(ДанныеЗаполнения);
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеДокументаОснования);
		ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРасходаДенег.ОплатаПоставщику");
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьДанныеПоРеализацииТоваров(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
    Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	РеализацияТоваровИУслуг.Контрагент КАК Получатель,
	               |	РеализацияТоваровИУслуг.СуммаДокумента КАК СуммаДокумента,
	               |	РеализацияТоваровИУслуг.Ссылка КАК ДокументОснование
	               |ИЗ
	               |	Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
	               |ГДЕ
	               |	РеализацияТоваровИУслуг.Ссылка = &Ссылка";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка;
	
КонецФункции

Функция ПолучитьДанныеПоПоступлениеТоваров(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
    Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПоступлениеТоваровИУслуг.Контрагент КАК Получатель,
	               |	ПоступлениеТоваровИУслуг.СуммаДокумента КАК СуммаДокумента,
	               |	ПоступлениеТоваровИУслуг.Ссылка КАК ДокументОснование
	               |ИЗ
	               |	Документ.ПоступлениеТоваровИУслуг КАК ПоступлениеТоваровИУслуг
	               |ГДЕ
	               |	ПоступлениеТоваровИУслуг.Ссылка = &Ссылка";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка;
	
КонецФункции

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
Запрос = Новый Запрос;
Запрос.УстановитьПараметр("Ссылка", Ссылка);
Запрос.Текст=
"ВЫБРАТЬ
|	РасходныйКассовыйОрдер.Дата КАК Период,
|	РасходныйКассовыйОрдер.Касса КАК Касса,
|	РасходныйКассовыйОрдер.СуммаДокумента КАК Сумма
|ИЗ
|	Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
|ГДЕ
|	РасходныйКассовыйОрдер.Ссылка = &Ссылка
|
|СГРУППИРОВАТЬ ПО
|	РасходныйКассовыйОрдер.Дата,
|	РасходныйКассовыйОрдер.Касса,
|	РасходныйКассовыйОрдер.СуммаДокумента";

Выборка = Запрос.Выполнить().Выбрать();
Пока Выборка.Следующий() Цикл
     Движение = Движения.ДенежныеСредства.ДобавитьРасход();
     ЗаполнитьЗначенияСвойств(Движение, Выборка);
КонецЦикла;

Движения.ДенежныеСредства.Записывать = Истина;
Движения.ДенежныеСредства.БлокироватьДляИзменения=Истина;

 АналитикаПроводки = ПолучитьАналитикуПроводки();
 Движения.Хозрасчётный.Записывать = Истина;

 Движение = Движения.Хозрасчётный.Добавить();
 Движение.СчетДт = АналитикаПроводки.СчетДебета;
 Движение.СчетКт = АналитикаПроводки.СчетКредита;
 Движение.Период = Дата;
 Движение.Сумма = СуммаДокумента;
 Движение.Содержание = АналитикаПроводки.СодержаниеОперации;
 БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, АналитикаПроводки.СубконтоДебет);
 БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетКт, Движение.СубконтоКт, АналитикаПроводки.СубконтоКредит);

 Движения.Записать();

Запрос = Новый Запрос;
Запрос.УстановитьПараметр("Касса", Касса);
Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));
Запрос.Текст=
"ВЫБРАТЬ
|	ДенежныеСредстваОстатки.Касса КАК Касса,
|	-ДенежныеСредстваОстатки.СуммаОстаток КАК СуммаОстаток
|ИЗ
|	РегистрНакопления.ДенежныеСредства.Остатки(&МоментВремени, Касса = &Касса) КАК ДенежныеСредстваОстатки
|ГДЕ
|	ДенежныеСредстваОстатки.СуммаОстаток < 0";

Рез = Запрос.Выполнить();
Если НЕ Рез.Пустой() Тогда
    Отказ = Истина;
    Выборка = Рез.Выбрать();
    Выборка.Следующий();
    Сообщение = Новый СообщениеПользователю;
    Сообщение.Текст = СтрШаблон("По кассе ""%1"" недостаточно денежных средств для расхода в размере %2", Выборка.Касса, Выборка.СуммаОстаток);
    Сообщение.Сообщить();
КонецЕсли;
КонецПроцедуры 

Функция ПолучитьАналитикуПроводки()
    
    ОплатаПоставщику = Перечисления.ВидыОперацийРасходаДенег.ОплатаПоставщику;
    ВозвратПокупателю = Перечисления.ВидыОперацийРасходаДенег.ВозвратПокупателю;
    ВыдачаПодотчетнику = Перечисления.ВидыОперацийРасходаДенег.ВыдачаПодотчетнику;
    ВыдачаЗаработнойПлаты = Перечисления.ВидыОперацийРасходаДенег.ВыдачаЗаработнойПлаты;    
        
    СтруктураАналитики = Новый Структура;
    СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.Касса);
    СтруктураАналитики.Вставить("СубконтоКредит", Касса);

    Если ВидОперации = ОплатаПоставщику Тогда
        СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчётыСПоставщиками);
        СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
        СтруктураАналитики.Вставить("СодержаниеОперации", "Оплата поставщику наличными из кассы");
    ИначеЕсли ВидОперации = ВозвратПокупателю Тогда
        СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчётыСПокупателями);    
        СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
        СтруктураАналитики.Вставить("СодержаниеОперации", "Возврат покупателю наличными из кассы");
    ИначеЕсли ВидОперации = ВыдачаПодотчетнику Тогда
        СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчётыСПодотчетнымиЛицами);
        СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
        СтруктураАналитики.Вставить("СодержаниеОперации", "Выдача денежных средств подотчётному лицу");
    ИначеЕсли ВидОперации = ВыдачаЗаработнойПлаты Тогда 
        СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчётыСПерсоналомПоОплатеТруда);
        СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
        СтруктураАналитики.Вставить("СодержаниеОперации", "Выплата заработной платы наличными из кассы");
	КонецЕсли;
	
    Возврат СтруктураАналитики;
    
КонецФункции