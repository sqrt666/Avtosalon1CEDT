
&НаКлиенте
Процедура ЗагрузитьДанныеЧерезПостроительЗапроса(Команда)
	СкопироватьФайлНаСервер("ПостроительЗапроса");
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьФайлНаСервер(СпособЗагрузки)
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("СкопироватьФайлНаСервереЗавершение", ЭтотОбъект, СпособЗагрузки);
	НачатьПомещениеФайлаНаСервер(ОповещениеОЗавершении,,,,,УникальныйИдентификатор);

КонецПроцедуры

&НаКлиенте
Процедура СкопироватьФайлНаСервереЗавершение(ОписаниеПомещенногоФайла, ДополнительныеПараметры) Экспорт
	
	Если ОписаниеПомещенногоФайла <> Неопределено Тогда
		
		АдресФайлаВХранилище = ОписаниеПомещенногоФайла.Адрес;
		
	    ЗагрузитьИзТабличногоДокументаНаСервере(АдресФайлаВХранилище, ДатаПрайсЛиста, ВидЦены, ДополнительныеПараметры);
		
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
 Процедура ЗагрузитьИзТабличногоДокументаНаСервере(АдресФайлаВХранилище, ДатаПрайсЛиста, ВидЦены, ДополнительныеПараметры)
	 
	 ТабДок = ПрочитатьФайл(АдресФайлаВХранилище);
	 
	 Если ДополнительныеПараметры = "ПостроительЗапроса" Тогда
		 ТаблицаПрайсЛиста = ЗаполнитьТаблицуЗначенийЧерезПостроительЗапроса(ТабДок);		 
	 КонецЕсли;
	 
	 Если ТаблицаПрайсЛиста.Количество() Тогда
		 ЗагрузитьПрайсЛист(ТаблицаПрайсЛиста, ДатаПрайсЛиста, ВидЦены);
	 Иначе
		 СообщениеПользователю = Новый СообщениеПользователю();
		 СообщениеПользователю.Текст = "Выбранный файл не содержит строк с ценами!";
		 СообщениеПользователю.Сообщить();
	 КонецЕсли;
	 
 КонецПроцедуры
 
  &НаСервереБезКонтекста
 Функция ПрочитатьФайл(АдресФайлаВХранилище)
     
     ТабДок = Новый ТабличныйДокумент;
     
     ИмявременногоФайла = ПолучитьИмяВременногоФайла(".xlsx");
     
     ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресФайлаВХранилище);
     ДвоичныеДанные.Записать(ИмяВременногоФайла);
     
     Попытка
    	 ТабДок.Прочитать(ИмяВременногоФайла);
     Исключение
    	 ВызватьИсключение "Не удалось прочитать файл EXCEL в табличный документ!";
     КонецПопытки;
     
     Возврат ТабДок;

 КонецФункции
 
  &НаСервереБезКонтекста
  Процедура ЗагрузитьПрайсЛист(ТаблицаПрайсЛиста, ДатаПрайсЛиста, ВидЦены)
      
      Запрос = Новый Запрос;
      Запрос.УстановитьПараметр("ТаблицаПрайсЛиста", ТаблицаПрайсЛиста);
      
      Запрос.Текст = "ВЫБРАТЬ
                     |	ТаблицаПрайсЛиста.Код КАК Код,
                     |	ТаблицаПрайсЛиста.Цена КАК Цена
                     |ПОМЕСТИТЬ ВТ_ТаблицаПрайсЛиста
                     |ИЗ
                     |	&ТаблицаПрайсЛиста КАК ТаблицаПрайсЛиста
                     |;
                     |
                     |////////////////////////////////////////////////////////////////////////////////
                     |ВЫБРАТЬ
                     |	Номенклатура.Ссылка КАК Номенклатура,
                     |	ВТ_ТаблицаПрайсЛиста.Цена КАК Цена
                     |ИЗ
                     |	ВТ_ТаблицаПрайсЛиста КАК ВТ_ТаблицаПрайсЛиста
                     |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
                     |		ПО ВТ_ТаблицаПрайсЛиста.Код = Номенклатура.Код";
      
    Рез = Запрос.Выполнить();
    Если Рез.Пустой() Тогда
    	Возврат;
    КонецЕсли;
    
	Выборка = Рез.Выбрать();
	
	НаборЗаписей = РегистрыСведений.ЦеныНоменклатуры.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	  
	СчетчикСтрок = 0;
	Пока Выборка.Следующий() Цикл		
	  НоваяЗаписьЦен = НаборЗаписей.Добавить();
	  НоваяЗаписьЦен.Номенклатура = Выборка.Номенклатура;
	  НоваяЗаписьЦен.ВидЦены = ВидЦены;
	  НоваяЗаписьЦен.Период = ДатаПрайсЛиста;
	  НоваяЗаписьЦен.Цена = Выборка.Цена;	
	  СчетчикСтрок = СчетчикСтрок + 1; 
	КонецЦикла;
	
    Попытка 
			
	 НаборЗаписей.Записать();
	 СообщениеПользователю = Новый СообщениеПользователю();
	 СообщениеПользователю.Текст = СтрШаблон("Создан и проведен документ установки цен %1 в количестве строк %2",ДатаПрайсЛиста,СчетчикСтрок);
	 СообщениеПользователю.Сообщить();
	  
    Исключение
		
	 СообщениеПользователю = Новый СообщениеПользователю();
     СообщениеПользователю.Текст = СтрШаблон("Произошла ошибка при проведении документа установки цен!");
	 СообщениеПользователю.Сообщить();
			
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
 Функция ЗаполнитьТаблицуЗначенийЧерезПостроительЗапроса(ТабДок)

ОбластиТабличногоДокумента = ТабДок.Область(1, 1, ТабДок.ВысотаТаблицы, ТабДок.ШиринаТаблицы);

Построитель = Новый ПостроительЗапроса; 
Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластиТабличногоДокумента); 
Построитель.Выполнить();

ТаблицаПрайсЛиста = Построитель.Результат.Выгрузить(); 

Возврат ТаблицаПрайсЛиста;

КонецФункции